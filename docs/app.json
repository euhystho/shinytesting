[{"name":"app.R","content":"#library(CausalImpact)\n\n\n# These are the necessary packages for R Shiny:\nlibrary(shiny)\nlibrary(bslib)\nlibrary(bsicons)\nlibrary(thematic)\n\nlibrary(ggplot2)\nlibrary(ggstatsplot)\nlibrary(patchwork)\n\n#STAHP COMPLAINING D:\n  options(warn=-1)\n  \n\n#Shoved all of the Causal Impact Base Code up here for easier access :D\n  \nset.seed(1)\nx1 <- 100 + arima.sim(model = list(ar = 0.999), n = 100)\ny1 <- 1.2 * x1 + rnorm(100)\ny1[71:100] <- y1[71:100] + 10\ndata <- cbind(y1, x1)\n  \nui <- navbarPage(\n  \n#Puts Title on the Application on the top\n  title = \"Causal Impact Demo in R Shiny\",\n  \n  #Sets the theme for bslib using the Bootswatch Library:\n  theme = bs_theme(\n    bootswatch = \"morph\"\n  ),\n  \n  \n  sidebar = sidebar(\n    title = \"Demo Controls\",\n    fillable = TRUE,\n    accordion_filters <- accordion(\n      accordion_panel(\n        \"Intervention Effect\", \n        icon = bs_icon(\"card-checklist\"),\n      #Setup with input funcs in Shiny are always input id, then the name in the app\n      #followed by the values\n        sliderInput(\"inv_mmt\", \n                    \"Intervention Moment\", \n                    min = 4, \n                    max = 96, \n                    value = 70,\n                    animate = animationOptions(\n                      interval = 750,\n                      loop = TRUE\n                      )\n                    )\n      \n      )\n    )\n  ),\n  \n# Creates a Tab\n  tabsetPanel(\n      # tabPanel(\n      #   title = \"Causal Impact Base Graph\",\n      #   card(\n      #     plotOutput(\"plot\")\n      #   ),\n      # \n      # ),\n\n      tabPanel(\n        title = \"Comparing Periods\",\n          card(\n            full_screen = TRUE,\n            plotOutput(\"plot2\")\n          )\n      #   ),\n      # \n      # tabPanel(\n      #   title = \"Summary\",\n      #   card(\n      #     full_screen = TRUE,\n      #     verbatimTextOutput(\"summary\")\n      #   )\n      )\n\n  ),\n\n  \n\n)\n\nserver <- function(input, output, session){\n#Sets the Plots to the same theme as a bslib theme :D\n  thematic_shiny()\n\n#Kind of like a list of values to set that can by dynamically allocated\n  v <- reactiveValues(\n    lower_bound = 0,\n    pre.period = 0,\n    post.period = 0\n  )\n  \n#Tracks the Intervention Moment and updates the bounds accordingly\n  observeEvent(input$inv_mmt,{\n    v$lower_bound <- input$inv_mmt[1]\n    v$pre.period <- c(1,v$lower_bound)\n    v$post.period <- c(v$lower_bound+1,100)\n  })\n  \n\n  # output$plot <- renderPlot({\n  # #Scaling the Bounds of the Intervention Effect\n  #   impact <- CausalImpact(data,v$pre.period, v$post.period)\n  #   the_plot <- plot(impact, \"pointwise\") +\n  #     geom_hline(yintercept = 10,\n  #                col = 'red') +\n  #     plot(impact, c(\"original\", \"cumulative\"))\n  # \n  #   plot(the_plot)\n  # \n  # \n  # })\n\n  output$plot2 <- renderPlot ({\n    df <- data.frame(\n      time = 1:nrow(data),\n      y = data[, 1],\n      period = ifelse(1:nrow(data) <= v$lower_bound, \"1. Pre-intervention\",\"2. Post-intervention\")\n      \n    )\n    \n    \n    ggbetweenstats(\n      data = df,\n      x = period,\n      y = y,\n      title = \"Comparing the Pre and Post Intervention Periods\",\n      xlab = \"Period\",\n      ylab = \"Intervention Amounts\",\n      ggplot.component = list(theme(text = element_text(size = 17)))\n    )\n    \n    \n  })\n\n  # output$summary <- renderPrint ({\n  #   impact <- CausalImpact(data,v$pre.period, v$post.period)\n  #   summary(impact)\n  # })\n\n}\n\n\nshinyApp(ui,server)\n\n","type":"text"}]
